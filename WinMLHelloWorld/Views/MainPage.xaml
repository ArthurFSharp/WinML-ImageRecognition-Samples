<Page x:Class="WinMLHelloWorld.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:Template10.Converters"
      xmlns:localconverters="using:WinMLHelloWorld.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:WinMLHelloWorld.Views"
      xmlns:ctl="using:WinMLHelloWorld.Controls"
      xmlns:imaging="using:Windows.UI.Xaml.Media.Imaging"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:WinMLHelloWorld.ViewModels" mc:Ignorable="d"
      Loaded="{x:Bind ViewModel.InitialiseVideoFrame}">

    <Page.Resources>
        <converters:StringFormatConverter x:Key="StrFormatConverter" />
        <localconverters:PathToBitmapConverter x:Key="PathToBitmapConverter" />
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="Tech lunch Windows ML">

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <Grid RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.Below="pageHeader">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Image Grid.Row="0"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Width="227"
                   Height="227"
                   Visibility="{x:Bind ViewModel.ImageViewerVisibilityState, Mode=OneWay}"
                   Source="{x:Bind ViewModel.ImageLocation, Mode=OneWay}" />
            <ctl:CameraControl x:Name="cameraControl" 
                               Grid.Row="0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Width="227"
                               Height="227"
                               Visibility="{x:Bind ViewModel.CameraViewerVisibilityState, Mode=OneWay}" />

            <StackPanel Grid.Row="1"
                        Margin="20, 0, 20, 20">
                <TextBlock Text="{x:Bind ViewModel.Category, Mode=OneWay, Converter={StaticResource StrFormatConverter}, ConverterParameter='Catégorie : {0} ', FallbackValue='Catégorie : Burger'}"
                           HorizontalAlignment="Center"
                           Style="{StaticResource SubheaderTextBlockStyle}" />
                <ComboBox x:Name="cameraSourceComboBox"
                          ItemsSource="{x:Bind ViewModel.CameraNames, Mode=OneWay}"
                          SelectionChanged="OnCameraSourceSelectionChanged" PlaceholderText="Caméra" />
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                            <Setter Property="Margin" Value="0, 0, 10, 0" />
                        </Style>
                    </StackPanel.Resources>
                    
                    <TextBlock Text="{x:Bind ViewModel.Burger, Mode=OneWay, Converter={StaticResource StrFormatConverter}, ConverterParameter='Burger : {0} ', FallbackValue='Burger : Non'}" />
                    <TextBlock Text="{x:Bind ViewModel.HotDog, Mode=OneWay, Converter={StaticResource StrFormatConverter}, ConverterParameter='Hot dog : {0} ', FallbackValue='Hot Dog : Non'}" />
                    <TextBlock Text="{x:Bind ViewModel.Tacos, Mode=OneWay, Converter={StaticResource StrFormatConverter}, ConverterParameter='Tacos : {0} ', FallbackValue='Tacos : Non'}" />
                </StackPanel>
            </StackPanel>

            <CommandBar Grid.Row="2">
                <AppBarButton Icon="Video"
                              Label="Camera"
                              Click="OnWebCameraButtonClicked" />
                <AppBarButton x:Name="OpenImagePicker"
                              Icon="Pictures"
                              Label="Charger une image">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="imagePickerFlyout">
                            <StackPanel Width="408">
                                <GridView x:Name="imagePickerGridView"
                                          ItemsSource="{x:Bind ViewModel.InputFiles}"
                                          SelectionMode="Single"
                                          SelectedItem="{x:Bind ViewModel.ImageLocation, Mode=TwoWay}"
                                          SelectionChanged="imagePickerGridView_SelectionChanged">
                                    <GridView.ItemTemplate>
                                        <DataTemplate x:DataType="imaging:BitmapImage">
                                            <Border Margin="6">
                                                <Image Width="120"
                                                       Height="120"
                                                       Stretch="UniformToFill"
                                                       Source="{x:Bind}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridView.ItemTemplate>

                                </GridView>
                                <Button Content="Parcourir..."
                                        Click="OnBrowseButtonClicked" />
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton x:Name="RecognizeButton"
                              Icon="Next"
                              Label="Reconnaitre"
                              Click="{x:Bind ViewModel.RecognizeImageBitmap}" />
            </CommandBar>
        </Grid>

    </RelativePanel>
</Page>
